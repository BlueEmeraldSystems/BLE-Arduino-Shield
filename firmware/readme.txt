This directory contiains files to create firmware and archive of generated files.

File list and Summary
----------------------------------------------------------------------------
attributes.txt    File generated by bgbuild
cdc.xml           Configuration file for USB Port
gatt.xml          Configuration file for GATT Services & Characteristics
hardware.xml      Configuration file for BLE112 hardware settings - UART Port, options, Baud Rate, timer, sleep mode etc
out-ble112.hex    Generated hex file to be loaded into the BLE112 module by 'bgupdate.exe'
project-ble112.bgproj Project file, used as input to the 'bgbuild.exe' build tool


Required tools
-----------------------------------------------------------------------------
* Text or XML Editor - user supplied
* Bgbuild.exe - part of SDK from www.Bluegiga.com
* Bgupdate.exe - tool within SDK from www.Bluegia.com


Tool Usage:
------------------------------------------------------------------------------
Build:
To build the firmware, 
* Open a command shell
* Enter 'bgbuild project-ble112.bgprog'
* Output file is 'out-ble112.hex'

Flash Loading:
To update firmware, run bgupdate.exe. 
* A user supplied flash loader is required. 
* The CC Debugger from Texas Insturments is the recomended loader.
* Cable Orientation: The cable should enter at the boards left edge, covering chip 'IC1'
* Set the file to be loaded to the path to 'out-ble112.hex'
* The Board may be programmed whild attached to an Arduino board.
  However, Digital Pin 4 must be configured as an input. Example code follows at the end of this document.
  
  If Pin 4 is configured as an output, the CC Debugger will show a 'Red LED' condition and will not update.
  
  
  --
  Example sketch to configure Pin 4 as an input:
  
  #define LED_PIN         13
  #define BLE_RESET_PIN   4
  
  void setup() {
  
  pinMode(BLE_RESET_PIN, INPUT);
  pinMode(LED_PIN, OUTPUT);
  }
  
  void loop() {
    // No code required, Led is flashed with short duty cycle as a user prompt
    // the pin-mode software is loaded and running.
    digitalWrite(LED_PIN, HIGHT);
    delay(50);
    
    digitalWrite(LED_PIN, LOW);
    delay(250);
    }
    


